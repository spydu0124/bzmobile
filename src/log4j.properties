log4j.rootLogger=debug, console, myfile 

# A1 is set to be a ConsoleAppender which outputs to System.out. 
log4j.appender.console=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.console.layout=org.apache.log4j.PatternLayout

# The conversion pattern uses format specifiers. You might want to
# change the pattern an watch the output format change.
# log4j.appender.console.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n
# log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
log4j.appender.console.layout.ConversionPattern=%d %-5p (%F:%L) - %m%n

# In this example, we are not really interested in INNER loop or SWAP
# messages. See the effects of uncommenting and changing the levels of
# the following loggers.
# log4j.logger.org.apache.log4j.examples.SortAlgo.INNER=WARN
# log4j.logger.org.apache.log4j.examples.SortAlgo.SWAP=WARN

# A1 is set to be a ConsoleAppender which outputs to System.out. 

log4j.appender.myfile=org.apache.log4j.RollingFileAppender
log4j.appender.myfile.Threshold=trace
#log4j.appender.myfile.File=D:/logs/ssm2.log
log4j.appender.myfile.MaxFileSize=1024KB
log4j.appender.myfile.MaxBackupIndex=20
log4j.appender.myfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.myfile.layout.ConversionPattern=%d{mmm d,yyyy hh:mm:ss a} : %p [%t] %m%n
log4j.appender.myfile.layout.ConversionPattern=%d{mmm d,yyyy hh:mm:ss a} : %p [%t] %m%n

log4j.logger.com.opensymphony.xwork2=ERROR
log4j.logger.freemarker.cache=ERROR
log4j.logger.freemarker.beans=ERROR
log4j.logger.org.apache.struts2=ERROR
 
 
log4j.appender.STDOUT.Threshold=trace
#log4j.category.org.hibernate.SQL=trace  
#log4j.category.org.hibernate.type=trace

log4j.logger.java.sql=debug
